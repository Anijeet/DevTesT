// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
id         String       @id     @default(uuid())
email      String       @unique
role       Role
}

enum Role{
  User
  Admin
}

model Contest{
id                  String         @id     @default(uuid())
title               String
startTime           DateTime
contestToChallengeMapping   ContestToChallengeMapping[]
}

model ContestToChallengeMapping {
 id         String       @id     @default(uuid())
 contestId  String
 challengeId String
 submission   Submission[]
 index        Int
 contest      Contest     @relation(fields: [contestId],references: [id])
 challenge    Challenge     @relation(fields: [challengeId],references: [id])
 @@unique([contestId,challengeId])

}

model Challenge{
id         String       @id     @default(uuid())
title       String
notionDocId     String
maxPoints    Int
contestToChallengeMapping   ContestToChallengeMapping[]
}

model Submission{
id         String       @id     @default(uuid())
contestToChallengeMappingId   String  
contestToChallengeMapping     ContestToChallengeMapping   @relation(fields: [contestToChallengeMappingId], references: [id])
points      Int
created_at  DateTime    @default(now())
}


model Leaderboard{
  id         String       @id     @default(uuid())
  contestId   String
  userId      String
  rank        Int
  @@unique([contestId,rank])
}
